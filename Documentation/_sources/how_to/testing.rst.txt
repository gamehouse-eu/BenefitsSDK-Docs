Testing your Integration
============================================

We recommend you to test this scenarios before releasing your game, both in the Editor, and later on device.

- Try to log in with a user who is not a subscriber
   - Should be able to log in
   - Should not be able to access subscriber benefits
   - Logout button should be visible
- Try to log in with a user who is a subscriber
    - Should be able to log in
    - Should be able to access subscriber benefits
    - Logout button should be visible
- Once logged in (with both subscriber and not subscriber), try to log out
    - Should be able to log out
    - Should not be able to access subscriber benefits
    - Login button should appear again
- Once logged in (with both subscriber and not subscriber), reopen game and check if it's still logged in
    - Should be able to access subscriber benefits if it was a subscriber
    - Should not be able to access subscriber benefits if it was not a subscriber
    - Logout button should be visible

Testing in the Editor
--------------------------------------------

Before you do any testing in device, it's recommended that you test in the Editor.

We provide a scriptable object called `BenefitsSDKMockSettings`, where you can define how you want the sdk to respond to your calls.

You can create one from the menu item GameHouse > Create Mock Settings. This will be created in Assets/Resources folder.

To enable the usage of this, you need to add the compiler flag `GHSDK_DEBUG` in Player Settings. If you are not sure how to add one, you can check the [Unity Documentation](https://docs.unity3d.com/Manual/custom-scripting-symbols.html).

Once you have this enabled, you can test all of the different scenarios, to make sure the game is behaving properly.

After you validated that it's working properly, you can turn it off, and test with the real implementation.

Testing on device
--------------------------------------------

Once you are ready to test on device, you can remove the previously added compiler flag, and test the real implementation in a build.

While testing, you can use your real email account. If you want to test the flow as a subscriber, you first need to send your Global Id to your GameHouse producer, so they can create a testing account for you.

To get your Global Id, you can do the login flow in the editor, with the same email, and without the compiler flag, and it should print your Global Id in the console.